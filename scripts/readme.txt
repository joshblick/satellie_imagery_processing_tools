Plan for Image Preprocessing Evaluations:

Make a new notebook, but since I need to use a lot of the same materials, it's probably time that all the 
working pieces that need to happen no matter how I go about things, so this would be:

 -  generator of the commands for the CMD.. (although really not sure how best to run this shit)
 -  classes for image processing should be package-like
 -  the info with the names, desc and results of the tried models should be in a config style file
 -  d



Plan for Image Splitting and Non-Max Supression:

So, my new thinking is that there is no need to have any form of reference between image snippets or the image boundary strips.

The best approach is:
1. satellite images of a store on a date becomes an object.

2. upon initialisation the image is broken up (at least the instructions to break it up are produced) both directly and at an offset of d/2 (the edges)
	these broken up pieces are another type of object: the image_snippet object

3. a command to count images then runs the model over each snippet, records the locations of the cars found in the global x,y scheme and then
   performs union over intersection pruning to remove duplicates.
   
   the detected objects are themselves kept as a detected_vehicle object where the centroid is one of the key parameters defining the objects
   
4. the centroids of the cars are then plotted as colord circles on the overall satellite image for debugging purposes.

--------------------------------------------------------------------------------------------------------
Object: Image

Attributes:
 - image directory
 - image name: file name without the extension
 - date
 - store number
 - image_as_nparray
 - snippets: list of snippet object instances generated by the split_into_segments method
 - detections: list of detection objects generated by the detect method

Methods:
 - split_into_snippets
--------------------------------------------------------------------------------------------------------
Object: Snippet

Attributes:
 - image_as_nparray
 - y_min
 - y_max
 - x_min
 - x_max
 - parent_image_name
 - detections



Methods:
 - __init__(image_as_nparray, x_min, x_max, y_min, y_max, parent_image_name)
 - detect(neural_network)
--------------------------------------------------------------------------------------------------------
Object: Detection
 
Attributes:
 - 

